# Plugins {{{
# ==============================================================================

    # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
    # Initialization code that may require console input (password prompts, [y/n]
    # confirmations, etc.) must go above this block; everything else may go below.
    if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
        source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
    fi

    export ZPLUG_HOME="$HOME/.zplug"
    source $ZPLUG_HOME/init.zsh

    zplug "plugins/common-aliases", from:oh-my-zsh
    zplug "plugins/cp",             from:oh-my-zsh
    zplug "plugins/docker",         from:oh-my-zsh
    zplug "plugins/docker-compose", from:oh-my-zsh
    zplug "plugins/fzf",            from:oh-my-zsh
    zplug "plugins/git",            from:oh-my-zsh
    zplug "plugins/git-flow",       from:oh-my-zsh
    zplug "plugins/httpie",         from:oh-my-zsh
    zplug "plugins/z",              from:oh-my-zsh
    zplug "zsh-users/zsh-completions",              defer:0
    zplug "zsh-users/zsh-autosuggestions",          defer:2, on:"zsh-users/zsh-completions"
    zplug "zsh-users/zsh-syntax-highlighting",      defer:3, on:"zsh-users/zsh-autosuggestions"
    zplug "zsh-users/zsh-history-substring-search", defer:3, on:"zsh-users/zsh-syntax-highlighting"
    zplug "djui/alias-tips"
    zplug "felixr/docker-zsh-completion"

    # Theme
    zplug romkatv/powerlevel10k, as:theme, depth:1

    # Install plugins if there are plugins that have not been installed
    if ! zplug check --verbose; then
        printf "Install? [y/N]: "
        if read -q; then
            echo; zplug install
        fi
    fi

    zplug load # --verbose

    # Enable bash completion
    #[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

    #autoload -U bashcompinit
    #bashcompinit
# }}}

# Load Configuration, Aliases and Functions by Topic {{{
# ==============================================================================
     source $HOME/dotfiles/shell/setup/00_setup.zsh;
     source $HOME/dotfiles/shell/setup/01_shell.zsh;
     source $HOME/dotfiles/shell/setup/02_git.zsh;
     source $HOME/dotfiles/shell/setup/03_docker.zsh;
     source $HOME/dotfiles/shell/setup/04_python.zsh;
     # source $HOME/dotfiles/shell/setup/05_ruby.zsh;
     # source $HOME/dotfiles/shell/setup/06_javascript.zsh;
     # source $HOME/dotfiles/shell/setup/07_scala.zsh;
     # source $HOME/dotfiles/shell/setup/08_aws.zsh;
# }}}

# Shell Setup {{{
# ==============================================================================

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/freddieruxton/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/freddieruxton/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/freddieruxton/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/freddieruxton/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# }}}
